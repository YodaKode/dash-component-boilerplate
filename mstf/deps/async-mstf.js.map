{"version":3,"file":"async-mstf.js","mappings":"+JAUMA,EAAO,SAACC,GACV,IAAOC,EAA8BD,EAA9BC,GAAIC,EAA0BF,EAA1BE,MAAOC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,MAe5B,OACIC,IAAAA,cAAA,OAAKJ,GAAIA,GAAI,qBACUC,EAAM,IACzBG,IAAAA,cAAA,SACID,MAAOA,EACPE,SAlBc,SAACC,GAUvBJ,EAAS,CAAEC,MAAOG,EAAEC,OAAOJ,OAC/B,IAWJ,EAEAL,EAAKU,aAAe,CAAC,EAErBV,EAAKW,UAAY,CAIbT,GAAIU,IAAAA,OAKJT,MAAOS,IAAAA,OAAiBC,WAKxBR,MAAOO,IAAAA,OAMPR,SAAUQ,IAAAA,MAGd,S","sources":["webpack:///./src/lib/fragments/mstf.react.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * ExampleComponent is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\nconst mstf = (props) => {\n    const {id, label, setProps, value} = props;\n\n    const handleInputChange = (e) => {\n        /*\n        * Send the new value to the parent component.\n        * setProps is a prop that is automatically supplied\n        * by dash's front-end (\"dash-renderer\").\n        * In a Dash app, this will update the component's\n        * props and send the data back to the Python Dash\n        * app server if a callback uses the modified prop as\n        * Input or State.\n        */\n        setProps({ value: e.target.value });\n    };\n\n    return (\n        <div id={id}>\n            ExampleComponent: {label}&nbsp;\n            <input\n                value={value}\n                onChange={handleInputChange}\n            />\n        </div>\n    );\n}\n\nmstf.defaultProps = {};\n\nmstf.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * A label that will be printed when this component is rendered.\n     */\n    label: PropTypes.string.isRequired,\n\n    /**\n     * The value displayed in the input.\n     */\n    value: PropTypes.string,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};\n\nexport default mstf;\n"],"names":["mstf","props","id","label","setProps","value","React","onChange","e","target","defaultProps","propTypes","PropTypes","isRequired"],"sourceRoot":""}